{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/autocompleter/autocomplete.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","global","factory","this","settings","selected","debounceTimer","doc","document","container","createElement","containerStyle","style","mobileFirefox","userAgent","navigator","indexOf","debounceWaitMs","preventSubmit","keyUpEventName","items","inputValue","minLen","showOnFocus","keypressCounter","undefined","minLength","input","clearDebounceTimer","window","clearTimeout","containerDisplayed","parentNode","clear","parent","removeChild","updatePosition","inputRect","top","maxHeight","height","width","offsetWidth","getBoundingClientRect","test","MSStream","pageYOffset","offsetHeight","innerHeight","bottom","left","customize","update","firstChild","render","item","currentValue","itemElement","textContent","label","renderGroup","groupName","groupDiv","fragment","createDocumentFragment","prevGroup","forEach","group","className","appendChild","div","addEventListener","ev","onSelect","preventDefault","stopPropagation","emptyMsg","empty","body","elements","getElementsByClassName","containerBottom","element","previous","previousElementSibling","offsetTop","scrollTop","selectBottom","updateScroll","updateIfDisplayed","resizeEventHandler","scrollEventHandler","target","keyupEventHandler","keyCode","which","_i","ignore_1","startFetch","keydownEventHandler","containerIsDisplayed","focusEventHandler","trigger","savedKeypressCounter","val","value","setTimeout","fetch","blurEventHandler","activeElement","position","evt","destroy","removeEventListener","define","amd","self","autocomplete"],"mappings":"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","file":"autocomplete.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.autocomplete = factory());\n}(this, function () { 'use strict';\n\n  /*\r\n   * https://github.com/kraaden/autocomplete\r\n   * Copyright (c) 2016 Denys Krasnoshchok\r\n   * MIT License\r\n   */\r\n  function autocomplete(settings) {\r\n      // just an alias to minimize JS file size\r\n      var doc = document;\r\n      var container = doc.createElement(\"div\");\r\n      var containerStyle = container.style;\r\n      var userAgent = navigator.userAgent;\r\n      var mobileFirefox = userAgent.indexOf(\"Firefox\") !== -1 && userAgent.indexOf(\"Mobile\") !== -1;\r\n      var debounceWaitMs = settings.debounceWaitMs || 0;\r\n      var preventSubmit = settings.preventSubmit || false;\r\n      // 'keyup' event will not be fired on Mobile Firefox, so we have to use 'input' event instead\r\n      var keyUpEventName = mobileFirefox ? \"input\" : \"keyup\";\r\n      var items = [];\r\n      var inputValue = \"\";\r\n      var minLen = 2;\r\n      var showOnFocus = settings.showOnFocus;\r\n      var selected;\r\n      var keypressCounter = 0;\r\n      var debounceTimer;\r\n      if (settings.minLength !== undefined) {\r\n          minLen = settings.minLength;\r\n      }\r\n      if (!settings.input) {\r\n          throw new Error(\"input undefined\");\r\n      }\r\n      var input = settings.input;\r\n      container.className = \"autocomplete \" + (settings.className || \"\");\r\n      containerStyle.position = \"fixed\";\r\n      /**\r\n       * Detach the container from DOM\r\n       */\r\n      function detach() {\r\n          var parent = container.parentNode;\r\n          if (parent) {\r\n              parent.removeChild(container);\r\n          }\r\n      }\r\n      /**\r\n       * Detect if the script is running on IOS\r\n       */\r\n      function isIOS() {\r\n          return /iPad|iPhone|iPod/.test(window.navigator.userAgent) && !window.MSStream;\r\n      }\r\n      /**\r\n       * Clear debouncing timer if assigned\r\n       */\r\n      function clearDebounceTimer() {\r\n          if (debounceTimer) {\r\n              window.clearTimeout(debounceTimer);\r\n          }\r\n      }\r\n      /**\r\n       * Attach the container to DOM\r\n       */\r\n      function attach() {\r\n          if (!container.parentNode) {\r\n              doc.body.appendChild(container);\r\n          }\r\n      }\r\n      /**\r\n       * Check if container for autocomplete is displayed\r\n       */\r\n      function containerDisplayed() {\r\n          return !!container.parentNode;\r\n      }\r\n      /**\r\n       * Clear autocomplete state and hide container\r\n       */\r\n      function clear() {\r\n          keypressCounter++;\r\n          items = [];\r\n          inputValue = \"\";\r\n          selected = undefined;\r\n          detach();\r\n      }\r\n      /**\r\n       * Update autocomplete position\r\n       */\r\n      function updatePosition() {\r\n          if (!containerDisplayed()) {\r\n              return;\r\n          }\r\n          containerStyle.height = \"auto\";\r\n          containerStyle.width = input.offsetWidth + \"px\";\r\n          var inputRect = input.getBoundingClientRect();\r\n          var top = isIOS()\r\n              ? inputRect.top + window.pageYOffset // a fix for buggy getBoundingClientRect on IOS\r\n              : inputRect.top;\r\n          top = top + input.offsetHeight;\r\n          var maxHeight = window.innerHeight - (inputRect.top + input.offsetHeight);\r\n          if (maxHeight < 0) {\r\n              maxHeight = 0;\r\n          }\r\n          containerStyle.top = top + \"px\";\r\n          containerStyle.bottom = \"\";\r\n          containerStyle.left = inputRect.left + \"px\";\r\n          containerStyle.maxHeight = maxHeight + \"px\";\r\n          if (settings.customize) {\r\n              settings.customize(input, inputRect, container, maxHeight);\r\n          }\r\n      }\r\n      /**\r\n       * Redraw the autocomplete div element with suggestions\r\n       */\r\n      function update() {\r\n          // delete all children from autocomplete DOM container\r\n          while (container.firstChild) {\r\n              container.removeChild(container.firstChild);\r\n          }\r\n          // function for rendering autocomplete suggestions\r\n          var render = function (item, currentValue) {\r\n              var itemElement = doc.createElement(\"div\");\r\n              itemElement.textContent = item.label || \"\";\r\n              return itemElement;\r\n          };\r\n          if (settings.render) {\r\n              render = settings.render;\r\n          }\r\n          // function to render autocomplete groups\r\n          var renderGroup = function (groupName, currentValue) {\r\n              var groupDiv = doc.createElement(\"div\");\r\n              groupDiv.textContent = groupName;\r\n              return groupDiv;\r\n          };\r\n          if (settings.renderGroup) {\r\n              renderGroup = settings.renderGroup;\r\n          }\r\n          var fragment = doc.createDocumentFragment();\r\n          var prevGroup = \"#9?$\";\r\n          items.forEach(function (item) {\r\n              if (item.group && item.group !== prevGroup) {\r\n                  prevGroup = item.group;\r\n                  var groupDiv = renderGroup(item.group, inputValue);\r\n                  if (groupDiv) {\r\n                      groupDiv.className += \" group\";\r\n                      fragment.appendChild(groupDiv);\r\n                  }\r\n              }\r\n              var div = render(item, inputValue);\r\n              if (div) {\r\n                  div.addEventListener(\"click\", function (ev) {\r\n                      settings.onSelect(item, input);\r\n                      clear();\r\n                      ev.preventDefault();\r\n                      ev.stopPropagation();\r\n                  });\r\n                  if (item === selected) {\r\n                      div.className += \" selected\";\r\n                  }\r\n                  fragment.appendChild(div);\r\n              }\r\n          });\r\n          container.appendChild(fragment);\r\n          if (items.length < 1) {\r\n              if (settings.emptyMsg) {\r\n                  var empty = doc.createElement(\"div\");\r\n                  empty.className = \"empty\";\r\n                  empty.textContent = settings.emptyMsg;\r\n                  container.appendChild(empty);\r\n              }\r\n              else {\r\n                  clear();\r\n                  return;\r\n              }\r\n          }\r\n          attach();\r\n          updatePosition();\r\n          updateScroll();\r\n      }\r\n      function updateIfDisplayed() {\r\n          if (containerDisplayed()) {\r\n              update();\r\n          }\r\n      }\r\n      function resizeEventHandler() {\r\n          updateIfDisplayed();\r\n      }\r\n      function scrollEventHandler(e) {\r\n          if (e.target !== container) {\r\n              updateIfDisplayed();\r\n          }\r\n          else {\r\n              e.preventDefault();\r\n          }\r\n      }\r\n      function keyupEventHandler(ev) {\r\n          var keyCode = ev.which || ev.keyCode || 0;\r\n          var ignore = [38 /* Up */, 13 /* Enter */, 27 /* Esc */, 39 /* Right */, 37 /* Left */, 16 /* Shift */, 17 /* Ctrl */, 18 /* Alt */, 20 /* CapsLock */, 91 /* WindowsKey */, 9 /* Tab */];\r\n          for (var _i = 0, ignore_1 = ignore; _i < ignore_1.length; _i++) {\r\n              var key = ignore_1[_i];\r\n              if (keyCode === key) {\r\n                  return;\r\n              }\r\n          }\r\n          // the down key is used to open autocomplete\r\n          if (keyCode === 40 /* Down */ && containerDisplayed()) {\r\n              return;\r\n          }\r\n          startFetch(0 /* Keyboard */);\r\n      }\r\n      /**\r\n       * Automatically move scroll bar if selected item is not visible\r\n       */\r\n      function updateScroll() {\r\n          var elements = container.getElementsByClassName(\"selected\");\r\n          if (elements.length > 0) {\r\n              var element = elements[0];\r\n              // make group visible\r\n              var previous = element.previousElementSibling;\r\n              if (previous && previous.className.indexOf(\"group\") !== -1 && !previous.previousElementSibling) {\r\n                  element = previous;\r\n              }\r\n              if (element.offsetTop < container.scrollTop) {\r\n                  container.scrollTop = element.offsetTop;\r\n              }\r\n              else {\r\n                  var selectBottom = element.offsetTop + element.offsetHeight;\r\n                  var containerBottom = container.scrollTop + container.offsetHeight;\r\n                  if (selectBottom > containerBottom) {\r\n                      container.scrollTop += selectBottom - containerBottom;\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      /**\r\n       * Select the previous item in suggestions\r\n       */\r\n      function selectPrev() {\r\n          if (items.length < 1) {\r\n              selected = undefined;\r\n          }\r\n          else {\r\n              if (selected === items[0]) {\r\n                  selected = items[items.length - 1];\r\n              }\r\n              else {\r\n                  for (var i = items.length - 1; i > 0; i--) {\r\n                      if (selected === items[i] || i === 1) {\r\n                          selected = items[i - 1];\r\n                          break;\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      /**\r\n       * Select the next item in suggestions\r\n       */\r\n      function selectNext() {\r\n          if (items.length < 1) {\r\n              selected = undefined;\r\n          }\r\n          if (!selected || selected === items[items.length - 1]) {\r\n              selected = items[0];\r\n              return;\r\n          }\r\n          for (var i = 0; i < (items.length - 1); i++) {\r\n              if (selected === items[i]) {\r\n                  selected = items[i + 1];\r\n                  break;\r\n              }\r\n          }\r\n      }\r\n      function keydownEventHandler(ev) {\r\n          var keyCode = ev.which || ev.keyCode || 0;\r\n          if (keyCode === 38 /* Up */ || keyCode === 40 /* Down */ || keyCode === 27 /* Esc */) {\r\n              var containerIsDisplayed = containerDisplayed();\r\n              if (keyCode === 27 /* Esc */) {\r\n                  clear();\r\n              }\r\n              else {\r\n                  if (!containerDisplayed || items.length < 1) {\r\n                      return;\r\n                  }\r\n                  keyCode === 38 /* Up */\r\n                      ? selectPrev()\r\n                      : selectNext();\r\n                  update();\r\n              }\r\n              ev.preventDefault();\r\n              if (containerIsDisplayed) {\r\n                  ev.stopPropagation();\r\n              }\r\n              return;\r\n          }\r\n          if (keyCode === 13 /* Enter */) {\r\n              if (selected) {\r\n                  settings.onSelect(selected, input);\r\n                  clear();\r\n              }\r\n              if (preventSubmit) {\r\n                  ev.preventDefault();\r\n              }\r\n          }\r\n      }\r\n      function focusEventHandler() {\r\n          if (showOnFocus) {\r\n              startFetch(1 /* Focus */);\r\n          }\r\n      }\r\n      function startFetch(trigger) {\r\n          // if multiple keys were pressed, before we get update from server,\r\n          // this may cause redrawing our autocomplete multiple times after the last key press.\r\n          // to avoid this, the number of times keyboard was pressed will be\r\n          // saved and checked before redraw our autocomplete box.\r\n          var savedKeypressCounter = ++keypressCounter;\r\n          var val = input.value;\r\n          if (val.length >= minLen || trigger === 1 /* Focus */) {\r\n              clearDebounceTimer();\r\n              debounceTimer = window.setTimeout(function () {\r\n                  settings.fetch(val, function (elements) {\r\n                      if (keypressCounter === savedKeypressCounter && elements) {\r\n                          items = elements;\r\n                          inputValue = val;\r\n                          selected = items.length > 0 ? items[0] : undefined;\r\n                          update();\r\n                      }\r\n                  }, 0 /* Keyboard */);\r\n              }, trigger === 0 /* Keyboard */ ? debounceWaitMs : 0);\r\n          }\r\n          else {\r\n              clear();\r\n          }\r\n      }\r\n      function blurEventHandler() {\r\n          // we need to delay clear, because when we click on an item, blur will be called before click and remove items from DOM\r\n          setTimeout(function () {\r\n              if (doc.activeElement !== input) {\r\n                  clear();\r\n              }\r\n          }, 200);\r\n      }\r\n      /**\r\n       * Fixes #26: on long clicks focus will be lost and onSelect method will not be called\r\n       */\r\n      container.addEventListener(\"mousedown\", function (evt) {\r\n          evt.stopPropagation();\r\n          evt.preventDefault();\r\n      });\r\n      /**\r\n       * This function will remove DOM elements and clear event handlers\r\n       */\r\n      function destroy() {\r\n          input.removeEventListener(\"focus\", focusEventHandler);\r\n          input.removeEventListener(\"keydown\", keydownEventHandler);\r\n          input.removeEventListener(keyUpEventName, keyupEventHandler);\r\n          input.removeEventListener(\"blur\", blurEventHandler);\r\n          window.removeEventListener(\"resize\", resizeEventHandler);\r\n          doc.removeEventListener(\"scroll\", scrollEventHandler, true);\r\n          clearDebounceTimer();\r\n          clear();\r\n          // prevent the update call if there are pending AJAX requests\r\n          keypressCounter++;\r\n      }\r\n      // setup event handlers\r\n      input.addEventListener(\"keydown\", keydownEventHandler);\r\n      input.addEventListener(keyUpEventName, keyupEventHandler);\r\n      input.addEventListener(\"blur\", blurEventHandler);\r\n      input.addEventListener(\"focus\", focusEventHandler);\r\n      window.addEventListener(\"resize\", resizeEventHandler);\r\n      doc.addEventListener(\"scroll\", scrollEventHandler, true);\r\n      return {\r\n          destroy: destroy\r\n      };\r\n  }\n\n  return autocomplete;\n\n}));\n//# sourceMappingURL=autocomplete.js.map\n"]}